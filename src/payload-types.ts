/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    cargos: Cargo;
    eventos: Evento;
    miembros: Miembro;
    proyectos: Proyecto;
    redes_sociales: RedesSociale;
    tecnologias: Tecnologia;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    miembros: {
      proyectos: 'proyectos';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    cargos: CargosSelect<false> | CargosSelect<true>;
    eventos: EventosSelect<false> | EventosSelect<true>;
    miembros: MiembrosSelect<false> | MiembrosSelect<true>;
    proyectos: ProyectosSelect<false> | ProyectosSelect<true>;
    redes_sociales: RedesSocialesSelect<false> | RedesSocialesSelect<true>;
    tecnologias: TecnologiasSelect<false> | TecnologiasSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cargos".
 */
export interface Cargo {
  id: number;
  nombre: string;
  descripcion: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventos".
 */
export interface Evento {
  id: number;
  tipo?: string | null;
  titulo: string;
  /**
   * El slug es una versión amigable del nombre, generalmente en minúsculas y sin espacios. Se utiliza en las URLs para identificar de manera única a un evento. Ejemplo: csipro-kickoff-2024
   */
  slug: string;
  enable_multi_dates?: boolean | null;
  /**
   * Fecha en que sucede el evento.
   */
  fecha_unica?: string | null;
  /**
   * Fecha en que inicia el evento. Deberá de ser la misma que la primera fecha de la lista de fechas y horas.
   */
  fecha_inicio: string;
  /**
   * Lista de fechas y horas en las que se llevará a cabo el evento. Instroducir una unica fecha si el evento no durá más de un día.
   */
  fechas_horas?:
    | {
        fecha_hora?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Ultima fecha de un evento que dura varios días. Deberá de ser la misma que la ultima fecha de la lista de fechas y horas. Si el evento dura un solo día, deberá de ser la misma que la fecha de inicio.
   */
  fecha_fin: string;
  lugar: string;
  duracion: number;
  participantes: (number | Miembro)[];
  cupos: number;
  imagen_principal: number | Media;
  imagenes_secundarias?:
    | {
        imagen?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  descripcion?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  asistentes?:
    | {
        nombre: string;
        apellido: string;
        email: string;
        expediente?: string | null;
        id?: string | null;
      }[]
    | null;
  requisitos?:
    | {
        nombre_requisito: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        detalles?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  publicaciones?:
    | {
        titulo_publicacion: string;
        red_social: number | RedesSociale;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "miembros".
 */
export interface Miembro {
  id: number;
  nombres: string;
  apellidos: string;
  email: string;
  /**
   * Link a portafolio personal o página web.
   */
  portfolio?: string | null;
  /**
   * El slug es una versión amigable del nombre, generalmente en minúsculas y sin espacios. Se utiliza en las URLs para identificar de manera única a un miembro. Ejemplo: juan-perez
   */
  slug: string;
  redes?:
    | {
        red?: (number | null) | RedesSociale;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  fecha_entrada?: string | null;
  fecha_salida?: string | null;
  foto: number | Media;
  'fotos-secundarias'?:
    | {
        imagen?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  cargo: number | Cargo;
  proyectos?: {
    docs?: (number | Proyecto)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redes_sociales".
 */
export interface RedesSociale {
  id: number;
  nombre: string;
  logo: number | Media;
  logo_monocromatico: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "proyectos".
 */
export interface Proyecto {
  id: number;
  nombre: string;
  participantes?: (number | Miembro)[] | null;
  tipo_sistema: 'Aplicación Móvil' | 'Aplicación de Escritorio' | 'Aplicación Web';
  /**
   * El slug es una versión amigable del nombre, generalmente en minúsculas y sin espacios. Se utiliza en las URLs para identificar de manera única a un proyecto. Ejemplo: csipro-access
   */
  slug: string;
  descripcion?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  subtitulo: string;
  imagen_principal: number | Media;
  imagenes_secundarias?:
    | {
        imagen?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  tecnologias?:
    | {
        tecnologia?: (number | null) | Tecnologia;
        id?: string | null;
      }[]
    | null;
  fecha_inicio: string;
  fecha_termino?: string | null;
  estado: 'Activo' | 'Inactivo' | 'Finalizado';
  url?: string | null;
  github_url?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tecnologias".
 */
export interface Tecnologia {
  id: number;
  nombre: string;
  logo: number | Media;
  logo_monocromatico: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'cargos';
        value: number | Cargo;
      } | null)
    | ({
        relationTo: 'eventos';
        value: number | Evento;
      } | null)
    | ({
        relationTo: 'miembros';
        value: number | Miembro;
      } | null)
    | ({
        relationTo: 'proyectos';
        value: number | Proyecto;
      } | null)
    | ({
        relationTo: 'redes_sociales';
        value: number | RedesSociale;
      } | null)
    | ({
        relationTo: 'tecnologias';
        value: number | Tecnologia;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cargos_select".
 */
export interface CargosSelect<T extends boolean = true> {
  nombre?: T;
  descripcion?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventos_select".
 */
export interface EventosSelect<T extends boolean = true> {
  tipo?: T;
  titulo?: T;
  slug?: T;
  enable_multi_dates?: T;
  fecha_unica?: T;
  fecha_inicio?: T;
  fechas_horas?:
    | T
    | {
        fecha_hora?: T;
        id?: T;
      };
  fecha_fin?: T;
  lugar?: T;
  duracion?: T;
  participantes?: T;
  cupos?: T;
  imagen_principal?: T;
  imagenes_secundarias?:
    | T
    | {
        imagen?: T;
        id?: T;
      };
  descripcion?: T;
  asistentes?:
    | T
    | {
        nombre?: T;
        apellido?: T;
        email?: T;
        expediente?: T;
        id?: T;
      };
  requisitos?:
    | T
    | {
        nombre_requisito?: T;
        detalles?: T;
        id?: T;
      };
  publicaciones?:
    | T
    | {
        titulo_publicacion?: T;
        red_social?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "miembros_select".
 */
export interface MiembrosSelect<T extends boolean = true> {
  nombres?: T;
  apellidos?: T;
  email?: T;
  portfolio?: T;
  slug?: T;
  redes?:
    | T
    | {
        red?: T;
        link?: T;
        id?: T;
      };
  fecha_entrada?: T;
  fecha_salida?: T;
  foto?: T;
  'fotos-secundarias'?:
    | T
    | {
        imagen?: T;
        id?: T;
      };
  cargo?: T;
  proyectos?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "proyectos_select".
 */
export interface ProyectosSelect<T extends boolean = true> {
  nombre?: T;
  participantes?: T;
  tipo_sistema?: T;
  slug?: T;
  descripcion?: T;
  subtitulo?: T;
  imagen_principal?: T;
  imagenes_secundarias?:
    | T
    | {
        imagen?: T;
        id?: T;
      };
  tecnologias?:
    | T
    | {
        tecnologia?: T;
        id?: T;
      };
  fecha_inicio?: T;
  fecha_termino?: T;
  estado?: T;
  url?: T;
  github_url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redes_sociales_select".
 */
export interface RedesSocialesSelect<T extends boolean = true> {
  nombre?: T;
  logo?: T;
  logo_monocromatico?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tecnologias_select".
 */
export interface TecnologiasSelect<T extends boolean = true> {
  nombre?: T;
  logo?: T;
  logo_monocromatico?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}